* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: 'Lexend', sans-serif;
}

body {

    height: 100vh;
    background: linear-gradient(120deg, #3ca7ee, #9b408f);
    font-family: 'Lexend', sans-serif;
    display: flex;
    /* dàn cả trang */
    justify-content: center;
    /* căn giữa trục x */
    align-items: center;
    /* căn giữa trục y */
    color: var(--whiteColor);
}

.taste{
    --backgroundColor: #BDCBB1;
    --whiteColor: #FCFBF6;
    --boxTestColor: #F6F7F1;
    --buttonColor: #5B5C77;
    --grayColor: #D0CCCC;
    --onButtonColor: #5A6851;
    --toggleFixedHeight: 36px;
    --toggleFixedStroke: 3px;
    --toggleOnColor: #BDCBB1;
    --toggleOnStrokeColor: #5A6851;
    --disableBackgroundColor: #E3E1DE;
}

.container {
    /* Flavour Taste */
    width: 1099.29px;
    height: 557.69px;
    background: var(--backgroundColor);
    border: 1px solid #000000;
    border-radius: 5px;
    overflow: hidden;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    z-index: 1;
}

.container-background {
    z-index: 2;
}

.container-background .circle1 {
    position: absolute;
    left: 0;
    bottom: 0;

}

.container-background .circle2 {
    position: absolute;
    top: 0;
    right: 0;
}

.container-header {
    background: var(--buttonColor);
    padding: 3.15077px 15px;
    width: 334.3px;
    font-size: 10px;
    text-align: center;
    border-radius: 5px;
    z-index: 3;
}

.container-body {
    z-index: 4;
    margin: 10px 10px;
    /* background: blue; */
    width: 95%;
    height: 90%;
}

.container-body .test {
    color: var(--buttonColor);
    padding-left: 15px;
    padding-bottom: 5px;
    font-size: 21px;
}

.container-body .flex-container {
    display: flex;
    justify-content: space-between;
    /* padding: 0 15px; */

}

.container-body .box-test {
    background: var(--boxTestColor);
    width: 807.37px;
    height: 455.29px;
    border-radius: 18.9046px;

}

.box-test .title{
    color:  var(--buttonColor);
    display: flex;
    padding-top: 5px;
}
.box-test .title h2{
    font-size: 20px;
    font-weight: 700;
    padding-right: 50px;
    /* padding: 0 10px;
    margin-left: 190px; */
}
.title-name{
    margin-left: 190px;
}
.title-direction{
    transform: translateX(-15px);
}
.container-body .box-button {
    position: relative;
    top: 37px;
    width: 206.06px;
    height: 376px;
}

.chanel {
    display: flex;
    /* padding-left: 10px;
    padding-top: 10px; */
    padding: 13px 15px 15px 15px ;
    gap: 25px;
    /* justify-content: center; */
    align-items: center;
}

.chanel p {
    font-size: 23px;
    font-weight: 700;
    color: var(--buttonColor);
}

/* .toggleChanel1 label{
    width: 80px;
	height: 30px;
	background-color: #aaa;
	border-radius: 20px;
	cursor: pointer;
	position: relative;
	display: flex;
	align-items: center;
} */

.toggleChanel1 label {
    width: 80px;
    height: var(--toggleFixedHeight);
    border-radius: 20px;
    background: var(--grayColor);
    border: var(--toggleFixedStroke) solid var(--buttonColor);
    cursor: pointer;
    position: relative;
    display: flex;
    align-items: center;
    transition: .5s;
}

/* 
.toggleChanel1 label .on{
    background: var(--toggleOnColor);
    border: var(--toggleFixedStroke) solid var(--toggleOnStrokeColor);
} */

.toggleChanel1 label::after {
    content: '';
    width: 25px;
    height: 25px;
    background: var(--whiteColor);
    border-radius: 50%;
    display: block;
    transform: translateX(5px);
    transition: .5s;
}

.toggleChanel1 input:checked+label {
    background: var(--toggleOnColor);
    border: var(--toggleFixedStroke) solid var(--toggleOnStrokeColor);
    /* transition: 1s; */
}

.toggleChanel1 input:checked+label::after {
    transform: translateX(45px);
    /* transition: 1s; */
}

#tasteName {
    color: var(--whiteColor);
    /* background: var(--buttonColor); */
    width: 157px;
    font-size: 18px;
    padding: 10px 5px;
    border-radius: 8px;
    border: none;
    outline: none;
    text-align: center;
}

#tasteName::placeholder {
    font-weight: 200;
    color: var(--disableBackgroundColor);
    text-align: center;
    /* Replace 'colorValue' with the color you want */
}

#tasteName:focus::placeholder {
    color: transparent;
    /* Replace 'colorValue' with the color you want */
}

.duration {
    display: flex;
    align-items: center;
    gap: 5px;
}

#duration {
    width: 63px;
    /* @include settingTextBox(); */
    font-size: 18px;
    background: var(--whiteColor);
    padding: 10px 5px;
    border-radius: 8px;
    border: none;
    outline: none;
    text-align: center;
}

.toggleDuration label {
    width: 80px;
    height: var(--toggleFixedHeight);
    border-radius: 20px;
    background: var(--grayColor);
    border: var(--toggleFixedStroke) solid var(--buttonColor);
    cursor: pointer;
    position: relative;
    display: flex;
    align-items: center;
    transition: .5s;
}

.toggleDuration p {
    color: var(--whiteColor);
    font-size: 18px;
    position: absolute;
    left: 10px;
    display: none;
}

.toggleDuration label::after {
    content: '';
    width: 25px;
    height: 25px;
    background: var(--whiteColor);
    border-radius: 50%;
    display: block;
    transform: translateX(5px);
    transition: .5s;
}

.toggleDuration input:checked+label {
    background: var(--buttonColor);
    border: var(--toggleFixedStroke) solid var(--toggleOnColor);
    /* transition: 1s; */
}

.toggleDuration input:checked+label::after {
    transform: translateX(45px);
    /* transition: 1s; */
}

.toggleDuration input:checked+label p {
    display: block;
}

.toggleDirection label {
    width: 90px;
    height: var(--toggleFixedHeight);
    border-radius: 20px;
    background: var(--buttonColor);
    border: var(--toggleFixedStroke) solid var(--toggleOnStrokeColor);
    cursor: pointer;
    position: relative;
    display: flex;
    align-items: center;
    transition: .5s;
    /* transition-delay: 0.5s; */
}

.toggleDirection .push {
    color: var(--whiteColor);
    font-size: 18px;
    position: absolute;
    left: 35px;
    /* transition-delay: 0.5s; */
    /* display: none; */
    opacity: 1;
    visibility: visible;
    transition: opacity 0.5s, visibility 0.5s;
}

.toggleDirection .pull {
    color: black;
    font-size: 18px;
    position: absolute;
    left: 15px;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s, visibility 0.5s;
}

.toggleDirection label::after {
    content: '';
    width: 25px;
    height: 25px;
    background: var(--whiteColor);
    border-radius: 50%;
    display: block;
    transform: translateX(5px);
    transition: .5s;
}

.toggleDirection input:checked+label {
    background: var(--toggleOnColor);
    border: var(--toggleFixedStroke) solid var(--toggleOnStrokeColor);
    transition: 0.5s;
}

.toggleDirection input:checked+label::after {
    transform: translateX(58px);
    transition: 0.5s;
}

.toggleDirection input:checked+label .push {
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s, visibility 0.5s;
}

.toggleDirection input:checked+label .pull {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.5s, visibility 0.5s;
}

/* .activeBtn  */
#activeButton1 {
    background: var(--buttonColor);
    font-size: 20px;
    color: var(--whiteColor);
    font-weight: 600;
    /* font-family: 'Lexend', sans-serif; */
    /* padding: 8px 20px; */
    /* width: 120px; */
    height: 41px;
    width: 121px;
    /* padding: 0 20px; */
    border-radius: 7px; 
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    border: none;
    outline: none;
    position: absolute;
    left: 672px;
    cursor: pointer;  
    transition: 0.5s;
}

/* label[for="activeButton"] {
    position: absolute;
    width: 121px;
    height: 41px;
    transform: translateX(-100%);
} */
/* .deactiveBtn  */
#deactiveButton1 {
    background: var(--whiteColor);
    font-size: 20px;
    color: var(--buttonColor);
    font-weight: 600;
    /* padding: 0 7px; */
    width: 121px;
    height: 41px;
    border-radius: 7px;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    border: none;
    outline: none;
    position: absolute;
    left: 672px;
    cursor: pointer; 
    transition: 0.5s;
}

/* label[for="deactiveButton"] {
    position: absolute;
    width: 121px;
    height: 41px;
    transform: translateX(-100%);
} */
.hidden {
    opacity: 0;
    visibility: none;
}

/* button for switching pages */

.switch-page {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 1000;
}

.switch-page button {
    padding: 10px 20px;
    background-color: var(--buttonColor);
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 18px;
}

.switch-page button:hover {
    background-color: var(--buttonColor);
}

/* box button */

.box-button {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
}

.global-intensity {
    display: flex;
    flex-direction: column;
    align-items: center;
    /* margin-bottom: 1px; */
    padding: 0 5px;
    width: 200px;
    background-color: var(--buttonColor);
    border-radius: 8px;
    color: white;
}

.global-intensity h3 {
    margin: 0;
    font-size: 23px;
    /* padding: 5px; */
}
.global-intensity .limit {
    margin: 0;
    font-size: 17px;
    /* padding: 5px; */
}

.global-intensity input[type="number"] {
    width: 100px;
    font-size: 20px;
    padding: 9px 15px;
    margin: 5px 0 10px 0;
    text-align: center; 
    border: 2px solid #564d80;
    background: white;
    color: var(--buttonColor);
    border-radius: 10px;
}

/* button {
    width: 150px;
    padding: 10px;
    background-color: #564d80;
    color: #000;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    color: #fff;
    background-color: #403b63;
}

button:disabled {
    background-color: var(--disabledColor);
    cursor: not-allowed;
} */



#duration:disabled{
    color: var(--grayColor);
    cursor: not-allowed;
    border-color: var(--disabledColor);
}
.toggleDuration input[type="checkbox"]:disabled + label {
    color: #ccc; /* Change the text color */
    border-color: var(--grayColor);
    background: var(--disableBackgroundColor);
  }
  
  /* Style the custom box when the checkbox is disabled */
 .toggleDuration input[type="checkbox"]:disabled + label:before {
    border-color: #ccc; /* Change the border color */
    background-color: #f0f0f0; /* Change the background color */
 }

 .toggleDirection input[type="checkbox"]:disabled + label {
    color: #ccc; /* Change the text color */
    border-color: var(--grayColor);
    background: var(--disableBackgroundColor);
  }
  .toggleDirection input[type="checkbox"]:disabled + label .push{
    color: var(--grayColor); /* Change the text color */
    transition: .5s;
  }
  .toggleDirection input[type="checkbox"]:disabled + label .pull{
    color: var(--grayColor); /* Change the text color */
    transition: .5s;
  }
  /* Style the custom box when the checkbox is disabled */
  #activeButton1:disabled{
    background: var(--disableBackgroundColor);
    color: var(--grayColor);
    cursor: not-allowed;
 }

 .off{
    background: var(--grayColor);
}
.on{
    background: var(--buttonColor);
}

 .outsideButton{
    margin-top: 15px;
 }
 .ActivateSelected{
    background: var(--buttonColor);
    height: 70px;
    width: 160px;
    font-size: 20px;
    font-weight: 600;
    padding: 10px 12px;
 }
 .ActivateAll{
    background: var(--buttonColor);
    height: 70px;
    font-size: 20px;
    font-weight: 600;
    padding: 12px 24px;
 }
 .DeactivateAll{
    background: var(--buttonColor);
    height: 70px;
    font-size: 20px;
    font-weight: 600;
    padding: 12px;
}
.outsideButton:focus {
    outline: none;
  }